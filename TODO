TO DO LIST for the RC Light Controller

* Automate tests to check whether assembly->disassembly->assembly gets
  the same result after both assemblies

* Add gamma value to the config so that we can determine what gamma was used!

* Add firmware version to the config, independent from config version!

* UI: make LED values in % rather than 0..255. Also for light programs!
  Firmware uses 255, but UI and compiler uses % range
  Compiler / Disassembler: allow % sign at end of number

* Auto detect highest light switch position used (also include light programs!)

* ESC mode: add forward/brake type for racing ESC!

* Be able to change the indicator/hazard blink frequency

* Can we preserve the settings upon reflash?

* Add support for 3-speed gearbox

* Merge Automatic disarming of brake function into ESC mode!

* Stream-line centre_threshold_low/high (TH) and centre_threshold (ST)



* Investigate whether we can detect the order of the incoming channels
  automatically.
  HK-310 and GT3B both send the servo signals in sequence (the GT3B has a 2us
  gap though), but the order is difference:
  - HK-310: ST - TH - CH3
  - GT3B: TH - ST - CH3
  - Futaba 4PL: outputs all channels simultanously

    So we have to deal with the following situations:
    - Servos are output in sequence with no percievable gap.
        Order to be discovered
        Read in sequence as hard-coded right now
    - Servos are output simultanously
        Wait for start of one servo, start timer, capture each individual
        channel. Can we do that without causing jitter when two servos output
        the same value?
    - Servos are output with gaps between them
        No actual system seen like this, but is plausible
        In this case just read them round-robin one in each mainloop

* Fix the issue with master and slave regarding UART RX usage in master for
  the preprocessor use case.

* Add PAGESEL statements to all calls and gotos to work properly when the code
  grows beyond one page (which happens already for the Wraith!)

* Test hysteresis for drive mode

* Improve the TLC5940 PCB:
    * Larger heat sink for TLC5940, using vias to ground plane
    * Protection resistors for all inputs / outputs? (conflict with Vpp?)
    * Direct programming pads?
    * Larger pads for resister that sets Iref?
    * High power switched output using MOSFET
        Use NXP PMV20XN, 4.8A in SOT23 package
    * Align all 0.1 inch connectors to 0.1 inch grid (allows mounting on a breadboard)



