TO DO LIST for the RC Light Controller

* DOC: Add documentation. Lots of it. :)

* DOC: When a priority program runs once, and another state takes precedence,
  the program has no effect and after the other state disappears, the lights
  are still wrong. Solution is to output constantly in a loop,
  including fade commands!.
  Needs documenting.

* Fix/remove broken Gerber at OSH Park

* Refactor directory structure

* FW: Test gearbox switch time

* FW: Default light program: If gearbox servo can we blink 1/2/3 for servo setup?

* FW: Show UART debug output only when possible (no preprocessor or winch out,
  but preprocessor reader)

* FW: Add PPM reader implementation

* DASM: Can we detect "all leds" shortcuts?
  And then define led_0..31 variables for those that appear only in a single
  command

* CONF/ASM/DASM: Make LED0..31 instead of master/slave
  This way we can directly address LEDs without defining them

* TOOLS: Add watch folder to ISP tool

* TOOLS: Add tool to extract light program source out of light controller config

* FW/TOOLS: make a combined preprocessor simulator with integrated ISP tool,
  with GUI and Windows executable Python3
  FW needs preprocessor reader to detect a special sequence to invoke ISP



* Test hysteresis for drive mode

* Improve the TLC5940 PCB:
    * Larger heat sink for TLC5940, using vias to ground plane

    Items considered but not done to stay compatible with the older stencil:
        * Protection resistors for all inputs / outputs (conflict with Vpp?)
        * Larger pads for resister that sets Iref
        * Align all 0.1 inch connectors to 0.1 inch grid (allows mounting on a breadboard)

